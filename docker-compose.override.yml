version: '3.4'

services:
  healthcheck:
    environment:
      - HealthChecksUI__HealthChecks__0__Name=Archiver API
      - HealthChecksUI__HealthChecks__0__Uri=http://archiver/hc
    ports:
      - "5107:80"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"

  seq:
    environment:
      - ACCEPT_EULA=Y
      - SEQ_CACHE_SYSTEMRAMTARGET=0.2
    volumes:
      - seq-data:/data
    ports:
      - "5340:80"

  booru-api:
    ports:
      - "30001:3000"

  archiver:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MONGO_CONNECTION_STRING=mongodb://mongoadmin:mongoadmin@archiver-mongo:27017?maxPoolSize=500
      - REDIS_CONNECTION_STRING=archiver-redis:6379
      - RABBITMQ_HOST=rabbitmq://rabbitmq:5672
      - BOORUAPI_HOST=http://booru-api:3000
      - COLLECTOR_ARIA2_HOST=http://collector:6800
      - COLLECTOR_ARIA2_SECRET=ARIA2
      - COLLECTOR_RCLONE_HOST=http://collector:5572
      - SEQ_SERVER_HOST=http://seq
    ports:
      - "30002:80"

  archiver-mongo:
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongoadmin
    volumes:
      - archiver-nosqldata:/data/db
    ports:
      - "27017:27017"

  collector:
    environment:
      - RPC_SECRET=ARIA2
      - SPLIT=5
      - CONCURRENT_DOWNLOADS=10
      - CONNECTIONS_PER_SERVER=8
      #- NOTIFICATION_ENDPOINT=
      - RCLONE_S3_ACCESS_KEY_ID=minio
      - RCLONE_S3_SECRET_ACCESS_KEY=minio123
      - RCLONE_S3_ENDPOINT=http://collector-minio:9000
      - RCLONE_S3_BUCKET=postfile
    volumes:
      - collector-downloads:/downloads
    ports:
      - 5572:5572

  collector-minio:
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    command: server /data{1...4} --console-address ":9001"
    volumes:
      - collector-miniodata1:/data1
      - collector-miniodata2:/data2
      - collector-miniodata3:/data3
      - collector-miniodata4:/data4
    ports:
      - "9001:9001"

  collector-imgproxy:
    environment:
      - IMGPROXY_ONLY_PRESETS=true
      - IMGPROXY_PRESETS=
            raw=skip_processing:jpg:png:gif,
            rs300a=resizing_type:fit/width:300/height:300/format:avif,
            rs500a=resizing_type:fit/width:500/height:500/format:avif,       
            rs300j=resizing_type:fit/width:300/height:300/format:jpg,
            rs500j=resizing_type:fit/width:500/height:500/format:jpg,
            rs300w=resizing_type:fit/width:300/height:300/format:webp,
            rs500w=resizing_type:fit/width:500/height:500/format:webp
      - IMGPROXY_QUALITY=80
      - IMGPROXY_MAX_SRC_RESOLUTION=200
      - IMGPROXY_BASE_URL=s3://postfile/
      - IMGPROXY_ALLOWED_SOURCES=s3://
      - IMGPROXY_USE_S3=true
      - IMGPROXY_S3_ENDPOINT=http://collector-minio:9000
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123    
    ports:
      - "30004:8080"
    depends_on:
      - collector-minio

  #yandestore:
  #  environment:
  #    - ASPNETCORE_ENVIRONMENT=Development
  #    - ASPNETCORE_URLS=http://+:80
  #    - DBConnectionString=Host=yandestore-postgres;Database=postgres;Username=root;Password=postgres;
  #    - HangfireConnectionString=yandestore-redis:6379
  #    - RetryMigrations=true
  #    - SeqServerUrl=http://seq
  #  ports:
  #    - "30005:80"

  #yandestore-dapr:
  #  command: ["./daprd",
  #    "-app-id", "yandestore",
  #    "-app-port", "80",
  #    "-components-path", "/components",
  #    "-config", "/configuration/ashlake-config.yaml"
  #    ]
  #  volumes:
  #    - "./dapr/components/:/components"
  #    - "./dapr/configuration/:/configuration"
  #  deploy:
  #    resources:
  #       limits:
  #          cpus: "2.00"
  #          memory: 500M
  #       reservations:
  #          memory: 100M

  #yandestore-postgres:
  #  environment:
  #    POSTGRES_USER: root 
  #    POSTGRES_DB: postgres
  #    POSTGRES_PASSWORD: postgres
  #  ports:
  #    - "5432"
  #  volumes:
  #    - yandestore-sqldata:/var/lib/postgresql/data

  #yandestore-redis:
  #  image: redis:7

volumes:
  seq-data:
  archiver-nosqldata:
  collector-miniodata1:
  collector-miniodata2:
  collector-miniodata3:
  collector-miniodata4:
  collector-downloads:
  #yandestore-sqldata:
